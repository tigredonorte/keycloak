name: keycloak

version: '3.8'

services:

  nginx:
    build:
      context: .
      dockerfile: ./infra/nginx/Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - keycloak
    networks:
      - my-network

  api:
    build:
      context: .
      dockerfile: ./server/Dockerfile.server
    ports:
      - "${APP_PORT}"
    volumes:
      - .:/app
    command: npm run dev:server
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "exit $(curl -s -o /dev/null -w '%{http_code}' http://localhost:9000/health/ready) -eq 200 || exit 1"]
      interval: 300s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - my-network

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    container_name: keycloak
    command: start --import-realm
    entrypoint: ["/opt/import-data/generate-realm.sh"]
    environment:
      - KC_DB_URL=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - KC_DB_USERNAME=${POSTGRES_USER}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
    env_file:
      - .env
    ports:
      - "${KEYCLOAK_PORT}:${KEYCLOAK_PORT}"
      - "9000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./infra/keycloak:/opt/import-data/
    networks:
      - my-network

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - my-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:

networks:
  my-network:
    driver: bridge

configs:
  nginx-config:
    file: ./infra/nginx/nginx.conf